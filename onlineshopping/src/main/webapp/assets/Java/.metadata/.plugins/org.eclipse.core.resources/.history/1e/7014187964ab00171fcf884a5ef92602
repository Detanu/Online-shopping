package org.pkg;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Map;

import org.jongo.Jongo;

import com.google.gson.Gson;


public class DownloadPage {

    public static void main(String[] args) throws IOException {

        // Make a URL to the web page
    	URL url=null;
    	for(int i=560037;i<=560102;i++){
    		
        url = new URL("http://pincode.saratchandra.in/api/pincode/"+i+"");
    	
        // Get the input stream through URL Connection
        URLConnection con = url.openConnection();
        InputStream is =con.getInputStream();
       // System.out.println(new Gson().toJson(is));

        // Once you have the Input Stream, it's just plain old Java IO stuff.

        // For this case, since you are interested in getting plain-text web page
        // I'll use a reader and output the text content to System.out.

        // For binary content, it's better to directly read the bytes from stream and write
        // to the target file.


        BufferedReader br = new BufferedReader(new InputStreamReader(is));
        				
        String line = null;
       
        // read each line and write to System.out
        while ((line = br.readLine()) != null) {
        	
            System.out.println(line);
            System.out.println(",");
            MongoUtill.getDb().getCollection("xyz").insert(line);
        }
    }}
}
